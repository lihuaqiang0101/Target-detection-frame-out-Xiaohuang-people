if __name__ == '__main__':
    net = Net()
    net.forward()
    saver = tf.train.Saver()
    with tf.Session() as sess:
        saver.restore(sess,'params\chpk')
        imgs = os.listdir('test_img')
        for i in range(100):
            index = random.randint(0,len(imgs))
            img = imgs[index]
            position = img.split('.')
            x1 = int(position[1])
            y1 = int(position[2])
            x2 = int(position[3])
            y2 = int(position[4])
            IMG = cv2.imread(r'test_img\{}'.format(img))
            Img = np.reshape(IMG, [-1, 224, 224, 3])
            Img = (Img / 255 - 0.5) * 2
            Out = sess.run([net.out_1], feed_dict={net.x: Img})
            out = Out[0][0]
            position = [abs(int(n)) for n in list(out * 224)]
            cv2.rectangle(IMG, (position[0], position[1]), (position[2], position[3]), (0, 0, 255), 2)
            cv2.rectangle(IMG, (x1, y1), (x2, y2), (255, 0, 0), 2)
            cv2.imshow(img, IMG)
            cv2.waitKey(0)
            cv2.destroyAllWindows()
